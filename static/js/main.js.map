{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/api-service.ts","./src/app/enums/tab-enum.ts","./src/app/components/main/main.component.ts","./src/app/components/main/main.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { TermCompareRespData } from './../models/TermCompareResp.data';\nimport { TermArrRespData } from './../models/TermArrResp.data';\nimport { TermRespData } from './../models/TermResp.data';\nimport { TabEnum } from './../enums/tab-enum';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ITermReq, ITermArrReq, ITermCompareReq } from './../interfaces/httpInterfaces';\n\n\nexport interface IResultData {\n  term: string;\n  vector: number;\n}\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  constructor(\n    private http: HttpClient\n  ) {}\n\n\n  public async getWordsSimilarity(obj: ITermCompareReq): Promise<number> {\n    return this.http.post('/word2vec/similarity', obj).toPromise().then((resp: TermCompareRespData) => resp?.similarity ? resp.similarity : null);\n  }\n\n  public async getProcess(obj: ITermReq | ITermArrReq, activeTabIndex: TabEnum): Promise<Array<IResultData>> {\n    const url: string = this.getProcessRequestByActiveTabIndex(activeTabIndex);\n\n    return this.http.post(url, obj).toPromise().then((resp: TermRespData | TermArrRespData) => this.parseProcessResp(activeTabIndex, resp));\n  }\n\n\n  private parseProcessResp(activeTabIndex: TabEnum, resp: TermRespData | TermArrRespData): Array<IResultData> {\n    const result: Array<IResultData> = [];\n\n    switch (activeTabIndex) {\n      case(TabEnum.Term):\n        if ((resp as TermRespData)?.similar?.length) {\n          (resp as TermRespData).similar.forEach((el: [string, number]) => result.push({ term: el[0], vector: el[1] }));\n        }\n        break;\n      case(TabEnum.TermArray):\n        if ((resp as TermArrRespData)?.center?.length) {\n          (resp as TermArrRespData).center.forEach((el: [string, number]) => result.push({ term: el[0], vector: el[1] }));\n        }\n        break;\n    }\n\n    return result;\n  }\n\n\n  private getProcessRequestByActiveTabIndex(activeTabIndex: TabEnum): string {\n    switch (activeTabIndex) {\n      case(TabEnum.Term):\n        return '/word2vec/similar';\n      case(TabEnum.TermArray):\n        return '/word2vec/center';\n    }\n  }\n}\n","export enum TabEnum {\n  Term,\n  TermArray,\n  TermCompare\n}\n","import { TabEnum } from './../../enums/tab-enum';\nimport { ApiService, IResultData } from './../../services/api-service';\nimport { Component, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { ITermReq, ITermArrReq, ITermCompareReq } from '../../interfaces/httpInterfaces';\n\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.sass'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MainComponent implements OnInit {\n  public data: Array<IResultData> | any;\n  public similarityData: number;\n  public terms: string = '';\n  public firstTerm: string = '';\n  public secondTerm: string = '';\n  public displayedColumns: string[] = ['term', 'vector'];\n  private activeTab: TabEnum = TabEnum.Term;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit(): void {}\n\n  public async getProcess(): Promise<void> {\n    if (this.terms) {\n      let reqObj: ITermReq | ITermArrReq;\n      const termArr = this.terms.split(' ');\n\n      if (termArr?.length) {\n        switch (this.activeTab) {\n          case(TabEnum.Term):\n            reqObj = { word: termArr[0] };\n            break;\n          case(TabEnum.TermArray):\n            reqObj = { words: termArr };\n            break;\n        }\n\n        const data: IResultData[] = await this.apiService.getProcess(reqObj, this.activeTab);\n\n        this.data = new MatTableDataSource((data as any));\n        this.data.sort = this.sort;\n      }\n    }\n  }\n\n\n  public async getWordsSimilarity(): Promise<void> {\n    const reqObj: ITermCompareReq = {\n      word_1: this.firstTerm,\n      word_2: this.secondTerm\n    };\n\n    this.similarityData = await this.apiService.getWordsSimilarity(reqObj);\n  }\n\n\n  public applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n\n    this.data.filter = filterValue.trim().toLowerCase();\n  }\n\n\n  // Use for reset data after active tab changed:\n  public onSelectedTabChange(ev: MatTabChangeEvent): void {\n    this.activeTab = ev.index;\n    this.data = this.similarityData = undefined;\n    this.terms = this.firstTerm = this.secondTerm = '';\n  }\n}\n","<mat-tab-group animationDuration=\"0ms\" mat-align-tabs=\"center\" [color]=\"'primary'\" (selectedTabChange)=\"onSelectedTabChange($event)\" [backgroundColor]=\"'primary'\">\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <div title=\"Обчислення семантичних асоціатів для однослівних термінів\">\n        Семантичні асоціати\n      </div>\n    </ng-template>\n\n    <div class=\"container\">\n      <h1>Обчислення семантичних асоціатів для однослівних термінів</h1>\n      <p>Використовується нейронна векторна модель представлення слів (алгоритм word2vec word embeddings) розмірністю 500d</p>\n\n      <div class=\"container container_middle\">\n        <form class=\"main-form\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Введіть термін (лему)</mat-label>\n            <input type=\"text\" [(ngModel)]=\"terms\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"гончар\">\n          </mat-form-field>\n          <button mat-flat-button [disabled]=\"!terms\" color=\"primary\" (click)=\"getProcess()\">Обчислити</button>\n        </form>\n\n        <ng-container *ngIf=\"data\">\n          <mat-form-field class=\"filter-data\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Введіть термін для пошуку\">\n          </mat-form-field>\n\n          <h3>Семантичні асоціати</h3>\n\n          <div class=\"grid-wrapper\">\n            <table mat-table matSort [dataSource]=\"data\">\n\n              <!-- Term Column -->\n              <ng-container [matColumnDef]=\"displayedColumns[0]\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Термін</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.term}} </td>\n              </ng-container>\n\n              <!-- Vector Column -->\n              <ng-container [matColumnDef]=\"displayedColumns[1]\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Косинусть на близкість</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.vector}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr> -->\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </mat-tab>\n\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <div title=\"Обчислення центру лексичного кластера однослівних термінів\">\n        Центр лексичного кластера\n      </div>\n    </ng-template>\n\n    <div class=\"container\">\n      <h1>Обчислення центру лексичного кластера термінів</h1>\n      <p>Сервіс обчислює центр лексичного кластера термінів з української мови.\n          Використовується нейронна векторна модель представлення слів (алгоритм word2vec word embeddings) розмірністю 300d - Уберкорпус.\n          Модель побудована на основі корпусу УберТекст, який містить 67496871 речень, що включать 665 мільйонів токенів. Джерела речень: тексти періодичних видань, вікіпедії, художня література.\n      </p>\n\n      <div class=\"container container_middle\">\n        <form class=\"main-form\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Введіть терміни (леми) через пробіл</mat-label>\n            <input type=\"text\" [(ngModel)]=\"terms\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"маленький комп'ютер портативний\">\n          </mat-form-field>\n          <button mat-flat-button [disabled]=\"!terms\" color=\"primary\" (click)=\"getProcess()\">Обчислити</button>\n        </form>\n\n        <ng-container *ngIf=\"data\">\n          <mat-form-field class=\"filter-data\">\n            <mat-label>Filter</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Введіть термін для пошуку\">\n          </mat-form-field>\n\n          <h3>Центр лексичного кластера</h3>\n\n          <div class=\"grid-wrapper\">\n            <table mat-table matSort [dataSource]=\"data\">\n\n              <!-- Term Column -->\n              <ng-container matColumnDef=\"term\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Термін</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.term}} </td>\n              </ng-container>\n\n              <!-- Vector Column -->\n              <ng-container matColumnDef=\"vector\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Косинусть на близкість</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.vector}} </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </mat-tab>\n\n  <!-- Third tab -->\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <div title=\"Обчислення семантичної близькісті однослівних термінів\">\n        Семантична близькість\n      </div>\n    </ng-template>\n\n    <div class=\"container\">\n      <h1>Обчислення семантичної близькості однослівних термінів</h1>\n      <p>Використовується нейронна векторна модель представлення слів (алгоритм word2vec word embeddings) розмірністю 500d</p>\n\n      <div class=\"container container_middle\">\n        <form class=\"main-form\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Введіть перший термін(лему) для порівняння</mat-label>\n            <input type=\"text\" [(ngModel)]=\"firstTerm\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"ноутбук\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Введіть другий термін(лему) для порівняння</mat-label>\n            <input type=\"text\" [(ngModel)]=\"secondTerm\" [ngModelOptions]=\"{standalone: true}\" matInput placeholder=\"планшет\">\n          </mat-form-field>\n          <button mat-flat-button [disabled]=\"!firstTerm || !secondTerm\" color=\"primary\" (click)=\"getWordsSimilarity()\">Обчислити</button>\n        </form>\n\n        <div *ngIf=\"similarityData !== undefined\" class=\"similarity-result\">\n          <span>Косинусна близькість:</span>\n          <span>{{similarityData}}</span>\n        </div>\n      </div>\n    </div>\n  </mat-tab>\n</mat-tab-group>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.sass']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <mat-toolbar color=\"primary\">\n        <small>IK імені В.М.Глушкова НAH України</small>\n    </mat-toolbar>\n</footer>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\">\n</div>\n\n<!-- Content -->\n<app-main></app-main>\n\n<!-- Footer -->\n<app-footer></app-footer>\n\n\n<!-- TODO: add routing -->\n<!-- <router-outlet></router-outlet> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FooterComponent } from './components/footer/footer.component';\nimport { MainComponent } from './components/main/main.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n// Angular material imports:\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    MainComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSortModule,\n    MatToolbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}